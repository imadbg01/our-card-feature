@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;700&display=swap");

:root {
  --Red: hsl(0, 78%, 62%);
  --Cyan: hsl(180, 62%, 55%);
  --Orange: hsl(34, 97%, 64%);
  --Blue: hsl(212, 86%, 64%);

  --DarkBlue: hsl(234, 12%, 34%);
  --GrayishBlue: hsl(229, 6%, 66%);
  --LightGray: hsl(0, 0%, 98%);
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  overflow-x: hidden;
  font-family: "Poppins", sans-serif;
  background-color: var(--LightGray);
}

.container {
  max-width: 75rem;
  text-align: center;
  display: grid;
  grid-template-columns: minmax(0.5rem, 1fr) minmax(0, 35.5rem) minmax(
      0.5rem,
      1fr
    );
  grid-template-areas: ". header .";
}

.header {
  grid-area: header;
  padding-block: 2rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.header > h1 {
  color: var(--GrayishBlue);
  font-weight: 200;
}

.header > h1 > span {
  display: block;
  color: var(--DarkBlue);
  font-weight: 700;
}

.header > p {
  color: var(--GrayishBlue);
  font-weight: 400;
  line-height: 1.5;
}

.grid-container {
  min-height: 100vh;
  margin-bottom: 5rem;
  display: grid;
  grid-template-columns: minmax(0.5rem, 1fr) minmax(0, 35.5rem) minmax(
      0.5rem,
      1fr
    );
  grid-template-rows: repeat(4, 1fr);
  gap: 2rem;
  grid-template-areas:
    ". section1 ."
    ". section2 ."
    ". section3 ."
    ". section4 .";
}

.grid-container > section {
  box-shadow: 1px 1px 5px var(--GrayishBlue);
  padding: 1.2rem;
  width: 100%;
  height: 16rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: flex-start;
  justify-content: flex-end;
  border-top: 0.5em solid transparent;
  border-radius: 0.5em;
}

.grid-container > section > h2 {
  color: var(--DarkBlue);
  text-transform: capitalize;
}

.grid-container > section > p {
  max-width: 35ch;
  color: var(--GrayishBlue);
}

.grid-container > section > div {
  justify-self: flex-end;
  align-self: flex-end;
}

.grid-container > section:nth-child(1) {
  grid-area: section1;
  border-color: var(--Cyan);
}

.grid-container > section:nth-child(2) {
  grid-area: section2;
  border-color: var(--Red);
}

.grid-container > section:nth-child(3) {
  grid-area: section3;
  border-color: var(--Orange);
}
.grid-container > section:nth-child(4) {
  grid-area: section4;
  border-color: var(--Blue);
}

@media (min-width: 45rem) and (max-width: 65rem) {
  .grid-container {
    grid-template-columns:
      minmax(0.5rem, 1fr) minmax(0, 25.5rem) minmax(0, 25.5rem)
      minmax(0.5rem, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-template-areas:
      ". section1 section2 ."
      ". section3 section4 .";
  }
}

@media (min-width: 65.0111rem) {
  .container {
    max-width: 95rem;
    grid-template-columns: minmax(0.5rem, 1fr) minmax(0, 65.5rem) minmax(
        0.5rem,
        1fr
      );
  }

  .header > p {
    max-width: 50ch;
    margin-inline: auto;
  }
  .grid-container {
    grid-template-columns: minmax(0.5rem, 1fr) repeat(9, 1fr) minmax(
        0.5rem,
        1fr
      );
    grid-template-areas: none;
  }

  .grid-container > section:nth-child(1) {
    grid-column: 2 / 5;
    grid-row: 2/4;
  }

  .grid-container > section:nth-child(2) {
    grid-column: 5 / 8;
    grid-row: 1 / 3;
  }

  .grid-container > section:nth-child(3) {
    grid-column: 5 / 8;
    grid-row: 3 / 6;
  }
  .grid-container > section:nth-child(4) {
    grid-column: 8 / 11;
    grid-row: 2 / 4;
  }
}

.attribution {
  position: fixed;
  display: block;
  bottom: 2.5rem;
  left: 2.5rem;
  height: 3rem;
  width: 3rem;
  border-radius: 100%;
  cursor: pointer;
  background-image: url(../images/logo.jpg);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: 100%;
  opacity: 1;
}

.attribution p {
  position: fixed;
  display: block;
  bottom: 5rem;
  left: 5rem;
  background-color: var(--DarkBlue);
  color: var(--LightGray);
  padding: 0.8em 1.2em;
  border-radius: 1rem;
  transform: rotateX(90deg);
  visibility: hidden;
  transition: transform 450ms linear, visibility 449ms linear;
}

.attribution a {
  text-decoration: none;
  color: var(--GrayishBlue);
}

.attribution:hover p {
  transform: rotateX(0);
  visibility: visible;
}
